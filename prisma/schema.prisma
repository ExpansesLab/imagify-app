generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token          String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  password      String?
  email         String?      @unique
  emailVerified DateTime?    @map("email_verified")
  image         String?
  credits       Int          @default(5)
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  accounts      Account[]
  sessions      Session[]
  generation    Generation[]
  payments      Payment[]

  @@map("user")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationToken")
}

model Generation {
  id              String   @id @default(cuid())
  imgUrl          String?  @map("img_url")
  prompt          String   @default("")
  translatedPrompt String? @default("") @map("translated_prompt")
  aspect_ratio    String?  @default("1:1")
  isPublic        Boolean? @default(true) @map("is_public")
  generation      String?
  model           String?
  predictionId    String?  @default("") @map("prediction_id")
  createdAt       DateTime @default(now()) @map("created_at")
  userId          String?
  width           String?  @default("")
  height          String?  @default("")
  user            User?    @relation(fields: [userId], references: [id])

  @@map("generation")
}

model Payment {
  id            String   @id @default(cuid())
  paymentId     String   @unique @map("payment_id")      // ID платежа в YooKassa
  tempPaymentId String?  @unique @map("temp_payment_id") // Временный ID для отслеживания статуса
  amount        Float
  currency      String
  status        String
  planId        String   @map("plan_id")
  userId        String   @map("user_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("payment")
}
